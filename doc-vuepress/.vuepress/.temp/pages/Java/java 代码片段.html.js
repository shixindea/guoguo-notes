import comp from "F:/my-project/guoguo-notes/doc-vuepress/.vuepress/.temp/pages/Java/java 代码片段.html.vue"
const data = JSON.parse("{\"path\":\"/Java/java%20%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html\",\"title\":\"Java 代码片段\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Java 代码片段\",\"date\":\"2023-5-21\",\"tags\":[\"Java\",\"代码片段\"],\"categories\":[\"自学篇\"]},\"headers\":[{\"level\":2,\"title\":\"图片转base64\",\"slug\":\"图片转base64\",\"link\":\"#图片转base64\",\"children\":[]}],\"git\":{\"updatedTime\":1721805748000,\"contributors\":[{\"name\":\"袁果锅\",\"email\":\"2914310412@qq.com\",\"commits\":1}]},\"filePathRelative\":\"Java/java 代码片段.md\",\"excerpt\":\"<h2>图片转base64</h2>\\n<div class=\\\"language-java\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"java\\\" data-title=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"line\\\">res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setImg</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">preview</span><span class=\\\"token punctuation\\\">(</span>res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getImg</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">String</span> <span class=\\\"token function\\\">preview</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span> name<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token class-name\\\">String</span> imagePath <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"D:\\\\\\\\java-upload-Pic\\\\\\\\\\\"</span> <span class=\\\"token operator\\\">+</span> name<span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token class-name\\\">File</span> imageFile <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">File</span><span class=\\\"token punctuation\\\">(</span>imagePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\">            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>imageFile<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">exists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">                <span class=\\\"token class-name\\\">FileInputStream</span> fileInputStream <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">FileInputStream</span><span class=\\\"token punctuation\\\">(</span>imageFile<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">                <span class=\\\"token keyword\\\">byte</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> imageData <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token keyword\\\">byte</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">)</span> imageFile<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">length</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">                fileInputStream<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">read</span><span class=\\\"token punctuation\\\">(</span>imageData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">                fileInputStream<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\">                <span class=\\\"token keyword\\\">byte</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> base64ImageData <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">Base64</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getEncoder</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">encode</span><span class=\\\"token punctuation\\\">(</span>imageData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">                <span class=\\\"token class-name\\\">String</span> base64ImageString <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">(</span>base64ImageData<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token class-name\\\">StandardCharsets</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">UTF_8</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\">                <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"data:image/jpeg;base64,\\\"</span> <span class=\\\"token operator\\\">+</span> base64ImageString<span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\">            <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">                <span class=\\\"token comment\\\">// 图片文件不存在的处理逻辑</span></span>\\n<span class=\\\"line\\\">                <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\">            <span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">IOException</span> e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">RuntimeException</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\"></span></code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
