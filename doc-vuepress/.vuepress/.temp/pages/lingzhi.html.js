import comp from "/Users/guoguo/code/my-project/guoguo-notes/doc-vuepress/.vuepress/.temp/pages/lingzhi.html.vue"
const data = JSON.parse("{\"path\":\"/lingzhi.html\",\"title\":\"IDEA高效开发：Database Navigator插件安装与核心使用指南\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[],\"git\":{\"updatedTime\":1755344722000,\"contributors\":[{\"name\":\"袁果锅\",\"email\":\"2914310412@qq.com\",\"commits\":1}]},\"filePathRelative\":\"lingzhi.md\",\"excerpt\":\"<ul>\\n<li>\\n<h1>IDEA高效开发：Database Navigator插件安装与核心使用指南</h1>\\n<hr>\\n<p><strong>目录</strong></p>\\n<p><a href=\\\"#1.%E5%89%8D%E8%A8%80\\\">1.前言</a></p>\\n<p><a href=\\\"#2.%E6%AD%A3%E6%96%87\\\">2.正文</a></p>\\n<p><a href=\\\"#2.1%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B\\\">2.1安装流程</a></p>\\n<p><a href=\\\"#2.1.1IDE%E5%86%85%E9%83%A8%E5%AE%89%E8%A3%85\\\">2.1.1IDE内部安装</a></p>\\n<p><a href=\\\"#2.1.2%E6%89%8B%E5%8A%A8%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85\\\">2.1.2手动下载安装</a></p>\\n<p><a href=\\\"#%E2%9A%A0%EF%B8%8F%20%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97\\\">⚠️ 避坑指南</a></p>\\n<p><a href=\\\"#2.2%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B\\\">2.2使用教程</a></p>\\n<p><a href=\\\"#2.2.1%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93\\\">2.2.1连接数据库</a></p>\\n<p><a href=\\\"#2.2.2%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%2F%E8%A1%A8\\\">2.2.2查看数据库/表</a></p>\\n<p><a href=\\\"#2.2.3%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE\\\">2.2.3查询数据</a></p>\\n<p><a href=\\\"#2.2.4%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%BB%93%E6%9E%84\\\">2.2.4修改表结构</a></p>\\n<p><a href=\\\"#2.2.5%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81\\\">2.2.5生成代码</a></p>\\n<p><a href=\\\"#2.2.6%E5%B8%B8%E8%A7%81%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4\\\">2.2.6常见故障排除</a></p>\\n<p><a href=\\\"#3.%E5%B0%8F%E7%BB%93\\\">3.小结</a></p>\\n<hr>\\n<h2>1.前言</h2>\\n<p>“作为<a href=\\\"https://so.csdn.net/so/search?q=Java%E5%BC%80%E5%8F%91&amp;spm=1001.2101.3001.7020\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Java开发</a>者，日常与数据库打交道是家常便饭。你是否也经历过这样的场景：在IDEA里写着代码，突然需要查个表结构或验证下SQL，不得不切换到Navicat、DBeaver等外部工具？频繁的切换不仅打断思路，效率也大打折扣。</p>\\n<p>今天要介绍的 <strong>Database Navigator</strong> 插件，正是解决这一痛点的绝佳方案。它能<strong>深度集成到IntelliJ IDEA</strong>中，让你无需离开熟悉的开发环境，就能<strong>高效完成数据库连接、查询、结构查看、甚至代码生成</strong>等核心操作。它不仅是数据库连接工具，更是提升Java后端开发流畅度的利器。</p>\\n<p>本文将手把手带你完成插件的安装配置，并重点讲解那些能显著提升我们日常开发效率的<strong>核心功能</strong>。告别低效切换，让我们直接在IDEA里‘玩转’数据库！”</p>\\n<hr>\\n<p><strong>插播一条消息~</strong></p>\\n<p>🔍 <strong>十年经验淬炼 · 系统化AI学习平台推荐</strong></p>\\n<p><a href=\\\"https://www.captainbed.cn/scy/\\\" title=\\\"系统化学习AI平台\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">系统化学习AI平台<img src=\\\"https://csdnimg.cn/release/blog_editor_html/release2.3.9/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=P4F5\\\" alt=\\\" \\\">https://www.captainbed.cn/scy/</a></p>\\n<p><strong>✅ 为什么值得投入？</strong></p>\\n<blockquote>\\n<ul>\\n<li>📚 **完整知识体系：**从数学基础 → 工业级项目（人脸识别/自动驾驶/GANs），内容由浅入深</li>\\n<li>💻 **实战为王：**每小节配套可运行代码案例（提供完整源码）</li>\\n<li>🎯 **零基础友好：**用生活案例讲解算法，无需担心数学/编程基础</li>\\n</ul>\\n</blockquote>\\n<p><strong>🚀 特别适合</strong></p>\\n<blockquote>\\n<ul>\\n<li>想系统补强AI知识的开发者</li>\\n<li>转型人工智能领域的从业者</li>\\n<li>需要项目经验的学生</li>\\n</ul>\\n</blockquote>\\n<hr>\\n<h2>2.正文</h2>\\n<h3>2.1安装流程</h3>\\n<h4>2.1.1IDE内部安装</h4>\\n<p>下面是详细的IDE内部安装流程：</p>\\n<p><strong>步骤详解</strong>：</p>\\n<p><strong>1.打开插件市场</strong></p>\\n<blockquote>\\n<ul>\\n<li>顶部菜单栏 → <code>File</code> → <code>Settings</code>（Windows/Linux）</li>\\n<li><em>或</em></li>\\n<li><code>IntelliJ IDEA</code> → <code>Preferences</code>（macOS）</li>\\n<li>左侧导航 → 选择 <code>Plugins</code> → 切换到 <code>Marketplace</code> 标签页。</li>\\n</ul>\\n</blockquote>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/65da1112cbd24473bf7856a67871c282.png\\\" alt=\\\"\\\"></p>\\n<p><strong>2.搜索插件</strong></p>\\n<blockquote>\\n<ul>\\n<li>在搜索框输入 <strong><code>Database Navigator</code></strong> → 按回车。</li>\\n<li><strong>认准官方标识</strong>：检查作者是否为 <code>JetBrains</code> 或 <code>RedNixon</code>（历史维护者），避免安装第三方仿冒插件。</li>\\n</ul>\\n</blockquote>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/acc782c228804bea910b6da2ed3c3392.png\\\" alt=\\\"\\\"></p>\\n<p><strong>3.安装并重启</strong></p>\\n<blockquote>\\n<ul>\\n<li>点击插件右侧的 <strong><code>Install</code></strong> 按钮 → 等待进度条完成。</li>\\n<li><strong>强制重启</strong>：安装完成后弹出提示 → 点击 <strong><code>Restart IDE</code></strong> 激活插件。</li>\\n<li><em>（未自动弹窗？手动重启IDEA即可）</em></li>\\n</ul>\\n</blockquote>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/6e436fcce7fc4f9f88c2848e749a58b9.png\\\" alt=\\\"\\\"></p>\\n<p><strong>4.验证安装</strong></p>\\n<blockquote>\\n<ul>\\n<li>重启后观察左侧工具栏 → 出现 <strong>数据库图标</strong>（<code>[ ]</code> 或 <code>&gt;_&gt;</code> 样式）即表示成功。</li>\\n<li>无图标？手动启用：<code>View</code> → <code>Tool Windows</code> → <code>Database Navigator</code>。</li>\\n</ul>\\n</blockquote>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/92b9f949e478402aabc0fc0e0585d403.png\\\" alt=\\\"\\\"></p>\\n<h4>2.1.2手动下载安装</h4>\\n<p>如果公司内网限制、插件市场访问失败，可以采用手动下载</p>\\n<p><strong>操作流程</strong>：</p>\\n<p><strong>1.下载插件包</strong></p>\\n<blockquote>\\n<p>访问 <a href=\\\"https://plugins.jetbrains.com/plugin/1800-database-navigator\\\" title=\\\"JetBrains 插件官网\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">JetBrains 插件官网</a></p>\\n<p>点击 <code>Download</code> → 选择 <strong>兼容当前IDEA版本</strong> 的 <code>.zip</code> 文件（如 <code>Database Navigator-12.x.zip</code>）。</p>\\n</blockquote>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/dd99fb79ed724caea45065a3620b0777.png\\\" alt=\\\"\\\"></p>\\n<p><strong>2.本地安装</strong></p>\\n<blockquote>\\n<p>打开IDE设置 → <code>Plugins</code> → 点击 ⚙️ 设置图标 → <code>Install Plugin from Disk...</code></p>\\n<p>选择下载的 <code>.zip</code> 文件 → 点击 <code>OK</code> 加载。</p>\\n</blockquote>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/fdba3efb328d4c3eb03aae0653a64c00.png\\\" alt=\\\"\\\"></p>\\n<p><strong>3.重启并生效</strong></p>\\n<blockquote>\\n<p>提示安装成功 → <strong>必须重启IDEA</strong> → 验证方式同 2.1.1。</p>\\n</blockquote>\\n<hr>\\n<h4><strong>⚠️ 避坑指南</strong></h4>\\n<p><strong>1.驱动报错？优先检查JDBC驱动！</strong></p>\\n<blockquote>\\n<p>连接数据库时若提示 <code>No suitable driver found</code>：</p>\\n<p>在配置数据源的界面 → 点击 <code>Driver</code> 选项卡 → 手动添加对应数据库的JDBC驱动包（如MySQL的 <code>mysql-connector-java-8.x.jar</code>）。</p>\\n<p><em>驱动包需提前下载到本地</em>。</p>\\n</blockquote>\\n<p><strong>2.重启后插件不显示？</strong></p>\\n<blockquote>\\n<p>进入 <code>Settings</code> → <code>Plugins</code> → <code>Installed</code> 标签页 → 确认 <code>Database Navigator</code> 已启用（复选框打钩✅）。</p>\\n</blockquote>\\n<p><strong>3.版本兼容性问题</strong></p>\\n<blockquote>\\n<p>手动安装时 → 务必下载与IDEA大版本匹配的插件（如IDEA 2023.x 选插件12.x版本）。</p>\\n</blockquote>\\n<h3>2.2使用教程</h3>\\n<h4>2.2.1连接数据库</h4>\\n<p><strong>步骤</strong>：</p>\\n<p><strong>1.打开插件窗口</strong>：</p>\\n<blockquote>\\n<ul>\\n<li>左侧工具栏点击 <strong><code>[ ]</code> 数据库图标</strong> → 或通过菜单 <code>View</code> → <code>Tool Windows</code> → <code>Database Navigator</code></li>\\n<li><strong>首次使用窗口为空</strong></li>\\n</ul>\\n</blockquote>\\n<p><strong>2.新建数据源</strong>：</p>\\n<p>这里以MySQL为例：</p>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/0c0588497115489c8cc3b7e288b9d4b5.png\\\" alt=\\\"\\\"></p>\\n<blockquote>\\n<ul>\\n<li>\\n<p>点击工具栏 <strong><code>+</code> 按钮</strong> → 选择数据库类型（MySQL, PostgreSQL, Oracle等）</p>\\n</li>\\n<li>\\n<p><strong>关键配置项</strong>（以MySQL为例）：</p>\\n<div class=\\\"language-text\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"text\\\" data-title=\\\"text\\\"><pre class=\\\"language-text\\\"><code><span class=\\\"line\\\">1.  - Host:</span>\\n<span class=\\\"line\\\"></span></code></pre></div></li>\\n<li>\\n<p><strong>测试连接</strong>：</p>\\n</li>\\n<li>\\n<p>点击 <code>Test Connection</code> → 出现 <strong><code>Successfully connected</code></strong> 提示才保存<img src=\\\"https://i-blog.csdnimg.cn/direct/d0d395272c4f4d99b4f658b4dde9a79e.png\\\" alt=\\\"\\\"></p>\\n</li>\\n</ul>\\n</blockquote>\\n<p><strong>避坑提示</strong>：<br>\\n⚠️ 80%连接失败因驱动问题！务必通过 <code>Test Connection</code> 验证<br>\\n✅ 保存后可重命名连接（右键连接 → <code>Rename</code>）</p>\\n<h4><a class=\\\"header-anchor\\\" href=\\\"#_2-2-2查看数据库-表\\\"><span>2.2.2</span></a><a href=\\\"https://so.csdn.net/so/search?q=%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93&amp;spm=1001.2101.3001.7020\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">查看数据库</a>/表</h4>\\n<p><strong>操作方式</strong>：</p>\\n<p><strong>1.树形结构浏览</strong>：</p>\\n<blockquote>\\n<ul>\\n<li>展开连接 → <code>Schemas</code> → 选择数据库 → 查看 <code>Tables</code>, <code>Views</code>, <code>Procedures</code> 等</li>\\n</ul>\\n</blockquote>\\n<p><strong>2.右键表名</strong>：</p>\\n<blockquote>\\n<ul>\\n<li><code>Open</code>：查看表数据（同2.2.3）</li>\\n<li><code>Properties</code>：查看列/索引/约束详情（<strong>替代<code>DESC table</code>命令</strong>）</li>\\n<li><code>Jump to DDL</code>：跳转查看建表语句</li>\\n</ul>\\n</blockquote>\\n<p><strong>3.快速搜索</strong>：</p>\\n<blockquote>\\n<ul>\\n<li>在Database Navigator窗口顶部输入表名 → <strong>实时过滤</strong></li>\\n</ul>\\n</blockquote>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/d0fd038a301c45a4aac6669a279a33bd.png\\\" alt=\\\"\\\"></p>\\n<p><strong>价值点</strong>：<br>\\n🔍 无需写SQL即可直观查看表结构，特别适合新人熟悉数据库设计</p>\\n<h4>2.2.3查询数据</h4>\\n<p><strong>两种入口</strong>：</p>\\n<blockquote>\\n<p><strong>1.新建查询控制台</strong>：</p>\\n<ul>\\n<li>右键连接/数据库 → <code>New</code> → <code>Query Console</code></li>\\n</ul>\\n<p><strong>2.快捷查询表数据</strong>：</p>\\n<ul>\\n<li>右键表 → <code>Open</code></li>\\n</ul>\\n</blockquote>\\n<p><strong>核心功能</strong>：</p>\\n<div class=\\\"language-text\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"text\\\" data-title=\\\"text\\\"><pre class=\\\"language-text\\\"><code><span class=\\\"line\\\">1.  -- 示例：编写SQL（支持自动补全、语法高亮）      2.  SELECT * FROM user WHERE status = 1;</span>\\n<span class=\\\"line\\\"></span></code></pre></div><blockquote>\\n<ul>\\n<li>\\n<p><strong>执行SQL</strong>：</p>\\n<ul>\\n<li>\\n<p>快捷键：<code>Ctrl + Enter</code>（Win/Linux） / <code>Cmd + Enter</code>（Mac）</p>\\n</li>\\n<li>\\n<p>或点击工具栏 ▶️ 按钮</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>结果处理</strong>：</p>\\n<ul>\\n<li>\\n<p>表格形式展示数据 → 支持排序（点击列头）、过滤（右键列）</p>\\n</li>\\n<li>\\n<p><strong>导出数据</strong>：右键结果网格 → <code>Export Data</code> → 支持CSV/Excel/JSON</p>\\n</li>\\n<li>\\n<p><strong>编辑数据</strong>（谨慎）：</p>\\n<ul>\\n<li>直接修改表格 → 按 <code>Submit</code> 提交（需开启事务）</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</blockquote>\\n<p><strong>效率技巧</strong>：<br>\\n💡 使用 <code>F5</code> 刷新结果集，<code>Ctrl + D</code> 复制当前行数据</p>\\n<h4>2.2.4修改表结构</h4>\\n<p><strong>适用场景</strong>：新增列、修改字段类型、添加索引等<br>\\n<strong>操作路径</strong>：</p>\\n<ul>\\n<li>右键表 → <code>Go To</code> → <code>Database Tools</code> → <code>Modify Table...</code></li>\\n</ul>\\n<p><strong>功能亮点</strong>：</p>\\n<p><strong>1.图形化编辑器</strong>：</p>\\n<blockquote>\\n<ul>\\n<li>添加/删除列 → 设置主键/自增/默认值</li>\\n<li>管理索引（INDEX）、外键（FOREIGN KEYS）</li>\\n</ul>\\n</blockquote>\\n<p><strong>2.实时预览DDL</strong>：</p>\\n<blockquote>\\n<ul>\\n<li>底部自动生成SQL语句 → 可复制执行</li>\\n</ul>\\n</blockquote>\\n<p><strong>3.保存生效</strong>：</p>\\n<blockquote>\\n<ul>\\n<li>点击 <code>Execute</code> → 自动执行ALTER语句修改表</li>\\n</ul>\\n</blockquote>\\n<p><strong>注意事项</strong>：<br>\\n❗ 生产环境谨慎操作！建议先导出DDL（右键表 → <code>Export DDL</code>）备份</p>\\n<h4>2.2.5生成代码</h4>\\n<p><strong>核心价值</strong>：自动生成实体类，减少重复编码<br>\\n<strong>操作路径</strong>：</p>\\n<ul>\\n<li>右键表 → <code>Scripted Extensions</code> → <code>Generate POJOs</code></li>\\n</ul>\\n<p><strong>配置选项</strong>：</p>\\n<div class=\\\"language-text\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"text\\\" data-title=\\\"text\\\"><pre class=\\\"language-text\\\"><code><span class=\\\"line\\\">1.  1. **Target Package**：</span>\\n<span class=\\\"line\\\"></span></code></pre></div><p><strong>生成结果示例</strong>：</p>\\n<div class=\\\"language-text\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"text\\\" data-title=\\\"text\\\"><pre class=\\\"language-text\\\"><code><span class=\\\"line\\\">1.  @Data      2.  @Entity      3.  @Table(name = \\\"user\\\")      4.  public class User {      5.      @Id      6.      @GeneratedValue(strategy = GenerationType.IDENTITY)      7.      private Long id;      8.      private String username;      9.      private LocalDateTime createTime;      10.  }</span>\\n<span class=\\\"line\\\"></span></code></pre></div><p><strong>效率对比</strong>：<br>\\n⏱️ 手动创建10字段的实体类 ≈ 3分钟 → 插件生成 ≈ 3秒</p>\\n<h4>2.2.6常见故障排除</h4>\\n<p><strong>1. 连接失败 <code>No suitable driver found</code></strong></p>\\n<blockquote>\\n<ul>\\n<li>\\n<p><strong>原因</strong>：JDBC驱动未加载</p>\\n</li>\\n<li>\\n<p><strong>解决</strong>：</p>\\n<ol>\\n<li>\\n<p>检查数据源配置 → <code>Driver</code> 选项卡</p>\\n</li>\\n<li>\\n<p>点击 <code>Download</code> 或手动指定驱动路径</p>\\n</li>\\n</ol>\\n</li>\\n</ul>\\n</blockquote>\\n<p><strong>2. 查询结果乱码</strong></p>\\n<blockquote>\\n<ul>\\n<li>\\n<p><strong>原因</strong>：数据库字符集与IDE不一致</p>\\n</li>\\n<li>\\n<p><strong>解决</strong>：</p>\\n<ul>\\n<li>连接配置 → <code>Advanced</code> 标签页 → 添加参数：<br>\\n<code>useUnicode=true&amp;characterEncoding=UTF-8</code></li>\\n</ul>\\n</li>\\n</ul>\\n</blockquote>\\n<p><strong>3. 修改数据不生效</strong></p>\\n<blockquote>\\n<ul>\\n<li>\\n<p><strong>原因</strong>：未提交事务</p>\\n</li>\\n<li>\\n<p><strong>解决</strong>：</p>\\n<ol>\\n<li>\\n<p>开启手动事务：工具栏点击 <code>Auto-Commit</code> 切换为手动</p>\\n</li>\\n<li>\\n<p>执行修改后点击 <code>Submit</code></p>\\n</li>\\n<li>\\n<p>点击 <code>Commit</code> 提交事务</p>\\n</li>\\n</ol>\\n</li>\\n</ul>\\n</blockquote>\\n<p><strong>4. 插件卡顿</strong></p>\\n<blockquote>\\n<p><strong>解决</strong>：</p>\\n<p>关闭不用的数据库连接</p>\\n<p>限制查询结果行数：<code>Settings</code> → <code>Database Navigator</code> → <code>Max rows to show</code></p>\\n</blockquote>\\n<h2>3.小结</h2>\\n<p>“通过本文的介绍，相信你已经掌握了Database Navigator插件的安装方法和核心使用技巧。这款插件的真正价值在于它<strong>无缝融入IDEA的开发流</strong>，让我们能够：</p>\\n<ul>\\n<li>\\n<p><strong>告别繁琐切换：</strong> 查询数据、查看结构、调试SQL，一切都在IDE内完成，思路不再中断。</p>\\n</li>\\n<li>\\n<p><strong>显著提升效率：</strong> 特别是<strong>快速生成POJO/JPA实体类</strong>的功能，对于Java开发者来说简直是解放双手的利器，极大减少了重复编码工作。</p>\\n</li>\\n<li>\\n<p><strong>操作直观便捷：</strong> 图形化的连接管理、智能的SQL编辑与结果展示、方便的表结构修改，让数据库操作变得简单高效。</p>\\n</li>\\n</ul>\\n<p>虽然对于极复杂的数据库管理任务，可能仍需专业工具，但Database Navigator <strong>足以覆盖日常开发中绝大部分的数据库交互需求</strong>，是提升Java开发效率和体验的强力辅助。</p>\\n<p>如果你在使用过程中发现了更多实用技巧或遇到了问题，也欢迎在评论区留言分享交流。</p>\\n<p><img src=\\\"https://i-blog.csdnimg.cn/direct/2d20333d275f4eaea9886df079636b01.jpeg\\\" alt=\\\"\\\"> 商务合作，技术交流，欢迎添加</p>\\n<p><img src=\\\"https://g.csdnimg.cn/extension-box/2.0.0/image/weixin.png\\\" alt=\\\"\\\"></p>\\n</li>\\n</ul>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
