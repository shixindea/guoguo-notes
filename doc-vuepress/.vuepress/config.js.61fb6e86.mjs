// doc-vuepress/.vuepress/config.js
import { viteBundler } from "@vuepress/bundler-vite";
import { defaultTheme } from "@vuepress/theme-default";
import { defineUserConfig } from "vuepress";

// doc-vuepress/.vuepress/navbar/en.ts
var enNavbar = [];

// doc-vuepress/.vuepress/navbar/zh.ts
var zhNavbar = [
  //单层
  {
    text: "\u4E3B\u9875",
    link: "/"
    // 该元素将一直处于激活状态
    // activeMatch: '/',
  },
  {
    text: "\u5FEB\u901F\u4E0A\u624B",
    link: "/\u5E38\u7528\u7B14\u8BB0/\u7F51\u7AD9\u914D\u8272",
    // 该元素将一直处于激活状态
    activeMatch: "/\u5E38\u7528\u7B14\u8BB0/\u7F51\u7AD9\u914D\u8272"
  },
  //两层嵌套
  {
    text: "\u8BED\u8A00",
    children: [
      {
        text: "\u7A0B\u5E8F",
        children: [
          { text: "C", link: "https://code.iglooblog.top/c/1.html" },
          { text: "\u6A21\u677F\u6587\u4EF6", link: "/\u5E38\u7528\u7B14\u8BB0/\u7F51\u7AD9\u914D\u8272" }
        ]
      },
      {
        text: "\u6807\u8BB0",
        children: [
          { text: "HTML", link: "https://code.iglooblog.top/html/1.html" },
          { text: "Markdown", link: "https://1m29yg5p67.k.topthink.com/@markdown" },
          { text: "CSS", link: "https://code.iglooblog.top/css/1.html" }
        ]
      }
    ]
  },
  //多个条目
  {
    text: "\u8BFE\u7A0B",
    children: [
      { text: "\u653F\u6CBB", link: "politics" },
      { text: "\u82F1\u8BED", link: "english" }
    ]
  },
  {
    text: "\u5173\u4E8E",
    link: "/about"
  }
  // 字符串 - 页面文件路径
  // '/Guide/README.md',
];

// doc-vuepress/.vuepress/sidebar/utils.js
import * as fs from "fs";
async function listFiles(directoryPath) {
  try {
    const files = await fs.readdir(directoryPath);
    return files.map((file) => {
      return {
        text: file,
        link: file
      };
    });
  } catch (error) {
    console.error("Error reading directory:", err);
    throw err;
  }
}

// doc-vuepress/.vuepress/sidebar/zh.ts
listFiles("doc-vuepress/\u5E38\u7528\u7B14\u8BB0").then((res) => {
  console.log("res ===>", res);
});
var zhSidebar = {
  "/\u5E38\u7528\u7B14\u8BB0/": [
    {
      text: "\u5E38\u7528\u7B14\u8BB0",
      //可折叠侧边栏
      collapsible: false,
      children: [
        {
          text: "\u7F51\u7AD9\u914D\u8272",
          link: "\u7F51\u7AD9\u914D\u8272"
        }
      ]
    }
  ]
};

// doc-vuepress/.vuepress/config.js
var config_default = defineUserConfig({
  "title": "Guoguo-notes",
  "description": "\u8881\u679C\u9505\u7B14\u8BB0",
  port: "6688",
  //端口号
  "dest": "docs",
  head: [
    [
      "link",
      {
        "rel": "icon",
        "href": "/favicon.ico"
      }
    ]
  ],
  lang: "zh-CN",
  locales: {
    "/": {
      selectLanguageName: "\u7B80\u4F53\u4E2D\u6587",
      title: "Guoguo-notes",
      description: "\u7E41\u661F\u4F3C\u6D77 \u71A0\u71A0\u751F\u8F89"
    },
    "/en/": {
      selectLanguageName: "English",
      title: "Guoguo-notes",
      description: "my book"
    }
  },
  bundler: viteBundler(),
  theme: defaultTheme({
    // 以下所有配置写在这里！！！
    locales: {
      "/": {
        repo: "https://github.com/shixindea/shixinde-notes",
        selectLanguageName: "\u7B80\u4F53\u4E2D\u6587",
        selectLanguageText: "\u9009\u62E9\u8BED\u8A00",
        navbar: zhNavbar,
        sidebar: zhSidebar,
        sidebarDepth: 2,
        notFound: ["\u6CA1\u627E\u5230", "\u7F51\u9875\u8D70\u4E22\u4E86"],
        backToHome: "\u8FD4\u56DE\u9996\u9875"
      },
      "/en/": {
        repo: "https://github.com/shixindea/shixinde-notes",
        selectLanguageName: "English",
        selectLanguageText: "Language",
        navbar: enNavbar,
        sidebar: zhSidebar
      }
    }
  })
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
