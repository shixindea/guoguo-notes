import{_ as n,c as s,o as a,a as p}from"./app-B2JSkSgd.js";const t={},e=p(`<h2 id="parse" tabindex="-1"><a class="header-anchor" href="#parse"><span>parse</span></a></h2><h3 id="校验-email" tabindex="-1"><a class="header-anchor" href="#校验-email"><span>校验 email</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-- 校验emall &#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> EmailSchema <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> email <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>EmailSchema<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;email ===&gt;&#39;</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组类型" tabindex="-1"><a class="header-anchor" href="#数组类型"><span>数组类型</span></a></h3><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="line">  <span class="token keyword">const</span> StringArraySchema <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;An array is required.&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> ObjectArraySchema <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">{</span> key<span class="token operator">:</span> v<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">const</span> theTestStringArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;111&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token keyword">const</span> theTestObjArr <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">          key<span class="token operator">:</span> <span class="token string">&#39;111&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          value<span class="token operator">:</span> <span class="token string">&#39;222&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">      </span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token string">&#39;ObjectArraySchema ===&gt;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        v<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>StringArraySchema<span class="token punctuation">,</span> theTestStringArr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token string">&#39;ObjectArraySchema ===&gt;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        v<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ObjectArraySchema<span class="token punctuation">,</span> theTestObjArr<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),c=[e];function l(o,i){return a(),s("div",null,c)}const r=n(t,[["render",l],["__file","valibot校验学习.html.vue"]]),k=JSON.parse(`{"path":"/%E5%B8%B8%E7%94%A8%E7%AC%94%E8%AE%B0/valibot%E6%A0%A1%E9%AA%8C%E5%AD%A6%E4%B9%A0.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"parse","slug":"parse","link":"#parse","children":[{"level":3,"title":"校验 email","slug":"校验-email","link":"#校验-email","children":[]},{"level":3,"title":"数组类型","slug":"数组类型","link":"#数组类型","children":[]}]}],"git":{"updatedTime":1739351223000,"contributors":[{"name":"袁果锅","email":"2914310412@qq.com","commits":1}]},"filePathRelative":"常用笔记/valibot校验学习.md","excerpt":"<h2>parse</h2>\\n<h3>校验 email</h3>\\n<div class=\\"language-typescript\\" data-highlighter=\\"prismjs\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"line\\">    <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'-- 校验emall '</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">      <span class=\\"token keyword\\">const</span> EmailSchema <span class=\\"token operator\\">=</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pipe</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">string</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">email</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">      <span class=\\"token keyword\\">const</span> email <span class=\\"token operator\\">=</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span>EmailSchema<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">      <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'email ===&gt;'</span><span class=\\"token punctuation\\">,</span> email<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">      <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}`);export{r as comp,k as data};
